#include "Spartan3/board/DigilentSpartan3.ham"
//====================================================================================
// Test12
// ctr4 - an optimally setup 4-bit counter...
//====================================================================================

/*===================================================================================
 Ctr2 
 A a 2-bit counter in one slice.
 
 We only use F1/G1 and the incrementing is done in the carry chain.  Note that PAR
 will often use F1/F2 and G1/G2 interchangeably and change your LUT's data accordingly
 to improve routing...

  Note: If CIN is not in the carry chain, PAR will route it in via BX!
 
 ===================================================================================*/
Ctr2(loc) input:(CLK,CIN) output:(OUT[2],COUT){
  slice SLICEL cfg:( CLKINV:CLK COUTUSED:0 CYINIT:CIN 
    CY0G:0 CYSELG:G DYMUX:1 GYMUX:GXOR FFX:#FF FFX_INIT_ATTR:INIT0 G:#LUT:D=0xF0F0  
    CY0F:0 CYSELF:F DXMUX:1 FXMUX:FXOR FFY:#FF FFY_INIT_ATTR:INIT0 F:#LUT:D=0xCCCC      
    );  
  wire my CLK   to his CLK;
  wire my CIN   to his CIN;      //carry in path via BX
  wire his COUT to my  COUT;
  wire his YQ to his G3, my OUT[1]; 
  wire his XQ to his F2, to my OUT[0]; // close counter loop
  
  //wire my VCC to  his G1, his G2, his G4, his F1,his F3,his F4;
}
/*===================================================================================
 Ctr4
    X   
    X   

  A a 2-bit counter in 2 slices.
 Using FPGA editor I found that the ultimate arrangement for input pin is:
 bottom first - F4 G1 F3 G2
 ===================================================================================*/

Ctr4(loc) input:(CLK,CIN) output:(OUT[4],COUT){
  sll SLICEL loc:xy(0,0) cfg:( CLKINV:CLK COUTUSED:0 CYINIT:CIN 
    CY0G:0 CYSELG:G DYMUX:1 GYMUX:GXOR FFX:#FF FFX_INIT_ATTR:INIT0 G:#LUT:D=0xAAAA  
    CY0F:0 CYSELF:F DXMUX:1 FXMUX:FXOR FFY:#FF FFY_INIT_ATTR:INIT0 F:#LUT:D=0xFF00      
    );  
  slh SLICEL loc:xy(0,1) cfg:( CLKINV:CLK COUTUSED:0 CYINIT:CIN 
    CY0G:0 CYSELG:G DYMUX:1 GYMUX:GXOR FFX:#FF FFX_INIT_ATTR:INIT0 G:#LUT:D=0xCCCC    
    CY0F:0 CYSELF:F DXMUX:1 FXMUX:FXOR FFY:#FF FFY_INIT_ATTR:INIT0 F:#LUT:D=0xF0F0     
    );  

  // Obviously, clk...
  wire my CLK to  sll's CLK,  slh's CLK;
  // Wire up the carry chain.
  wire my CIN to sll's CIN;
  wire sll's COUT to slh's CIN;
  wire slh's COUT to my COUT;
  // loop
  wire sll's XQ to sll's F4, my OUT[0];
  wire sll's YQ to sll's G1, my OUT[1];
  wire slh's XQ to slh's F3, my OUT[2];
  wire slh's YQ to slh's G2, my OUT[3];
  // and short out the unused inputs
  wire my vcc to sll's F1, sll's F2, sll's F3, sll's G2, sll's G3, sll's G4;
  wire my vcc to slh's F1, slh's F2, slh's F4, slh's G1, slh's G3, slh's G4;
}


top() {
  clk CLK_1Hz;
  pc Ctr4 loc:xy(10,10);
  wire clk's CLK to pc's CLK;
  wire my vcc to pc's CIN;
  led Leds;
  wire pc's OUT[0:3] to led's IN[0:3];
  wire my gnd to led's IN[4], led's IN[5], led's IN[6], led's IN[7];

}
 
